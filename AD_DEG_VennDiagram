library(tidyverse)
library(edgeR)
library(ssizeRNA)
library(ggrepel)
library(scales)
library(plotly)
library(gprofiler2)
library(dplyr)
library(VennDiagram)
library(grid)  # Needed for grid.newpage()

# Set working directory
setwd("/g/data/xl04/hrp561/adrna/")

# Load raw counts data
rawcounts <- read_delim("analyses/alnbam/adrawcounts.ensembl", delim = "\t", comment = "#")

# Clean up column names by removing ".bam"
colnames(rawcounts) <- str_replace(colnames(rawcounts), ".bam", "")

# Load summary counts data and transform
summarycounts <- read_delim("analyses/alnbam/adrawcounts.ensembl.summary", delim = "\t", comment = "#")
summarycounts <- summarycounts %>% 
  pivot_longer(-1, names_to = "sampleid") %>% 
  filter(value != 0) %>% 
  mutate(sampleid = str_replace(sampleid, ".bam", ""))

# Create sample info table
sinfo <- summarycounts %>% 
  pivot_wider(names_from = "Status", values_from = "value") %>% 
  mutate(totalcounts = Assigned + Unassigned_Unmapped + Unassigned_NoFeatures,
         libsize = Assigned + Unassigned_NoFeatures,
         sex = case_when(str_detect(sampleid, "_F_") ~ "female", TRUE ~ "male"), 
         stype = case_when(str_detect(sampleid, "Control") ~ "ctrl", TRUE ~ "AD"))

# Load gene info and join with raw counts
geneinfo <- read_delim("reference/ensembl.geneinfo", delim = "\t", col_names = F)
colnames(geneinfo) <- c("Geneid", "GeneName", "Chr", "Start", "End")
geneinfo <- left_join(geneinfo, rawcounts[, c(1, 6, 7)], by = "Geneid")

# Prepare data for edgeR
y <- DGEList(counts = as.matrix(rawcounts[, 8:ncol(rawcounts)]), 
             genes = as.data.frame(geneinfo), 
             lib.size = pull(sinfo, libsize),
             group = mutate(sinfo, group = paste(sex, stype, sep = ".")) %>% pull(group),
             samples = sinfo,
             remove.zeros = TRUE)

# Filter genes based on expression
keep <- filterByExpr(y, group = y$samples$group)
y <- y[keep,]

# Normalize library sizes
y <- normLibSizes(y)

# MDS plot to visualize sample similarities
plotMDS(cpm(y, normalized.lib.sizes = T, log = T), top = 1000, labels = y$samples$stype)

# LogCPM for each experimental group
logcpm <- cpmByGroup(y, normalized.lib.sizes = T, log = T, group = y$samples$group)
logcpm <- as.data.frame(logcpm)
logcpm <- bind_cols(logcpm, y$genes)
logcpm <- as_tibble(logcpm)

# Visualizing logFC differences for chromosome X
logcpm %>% 
  mutate(mlogfc = male.AD - male.ctrl, flogfc = female.AD - female.ctrl) %>% 
  filter(Chr == "chrX") %>%
  dplyr::select(Chr, Start, mlogfc, flogfc) %>% 
  pivot_longer(cols = -c("Chr", "Start"), names_to = "sex", values_to = "logfc") %>% 
  ggplot(aes(x = Start, y = logfc, color = sex)) + 
  geom_point() + 
  geom_smooth()

# GLM for differential expression
design <- model.matrix(~0+group, data=y$samples)
colnames(design) <- levels(y$samples$group)
y <- estimateDisp(y, design)
fit <- glmQLFit(y, design)

# Differential expression for females
females <- glmQLFTest(fit, contrast=c(-1,1,0,0))
fc_female <- topTags(females, p.value = 0.05, n = 1e6)

# Differential expression for males
males <- glmQLFTest(fit, contrast=c(0,0,1,-1))
fc_male <- topTags(males, p.value = 0.05, n = 1e6)

# Differential expression for control
ctrl <- glmQLFTest(fit, contrast=c(0,-1,0,1))
fc_ctrl <- topTags(ctrl, p.value = 0.05, n = 1e6)

# Differential expression for Alzheimer's Disease
ad <- glmQLFTest(fit, contrast=c(-1,0,1,0))
fc_ad <- topTags(ad, p.value = 0.05, n = 1e6)

# Set new working directory for Venn diagram
setwd("/home/272/sg4187")

# Prepare data for Venn diagram
fdr_threshold <- 0.05
fc_threshold <- 2

df <- df %>%
  mutate(
    male_fdr = p.adjust(mlogfc, method = "fdr"),   # Apply FDR correction to male p-values
    female_fdr = p.adjust(flogfc, method = "fdr")  # Apply FDR correction to female p-values
  )

df_filtered <- df %>%
  filter((male_fdr < fdr_threshold | female_fdr < fdr_threshold) & 
           (mlogfc > fc_threshold | mlogfc < -fc_threshold | flogfc > fc_threshold | flogfc < -fc_threshold))

df_categories <- df_filtered %>%
  mutate(
    male_up = ifelse(mlogfc > fc_threshold, "Upregulated", "Not Upregulated"),
    male_down = ifelse(mlogfc < -fc_threshold, "Downregulated", "Not Downregulated"),
    female_up = ifelse(flogfc > fc_threshold, "Upregulated", "Not Upregulated"),
    female_down = ifelse(flogfc < -fc_threshold, "Downregulated", "Not Downregulated")
  )

# Venn Diagrams
male_deg <- df_categories %>% filter(male_up == "Upregulated" | male_down == "Downregulated") %>% pull(GeneName)
female_deg <- df_categories %>% filter(female_up == "Upregulated" | female_down == "Downregulated") %>% pull(GeneName)

male_up <- df_categories %>% filter(male_up == "Upregulated") %>% pull(GeneName)
female_up <- df_categories %>% filter(female_up == "Upregulated") %>% pull(GeneName)

male_down <- df_categories %>% filter(male_down == "Downregulated") %>% pull(GeneName)
female_down <- df_categories %>% filter(female_down == "Downregulated") %>% pull(GeneName)

# Male AD vs Female AD (all DEGs)
grid.newpage()  
venn_all <- venn.diagram(
  x = list(Male_AD = male_deg, Female_AD = female_deg),
  category.names = c("Male AD", "Female AD"),
  filename = NULL,
  output = TRUE,
  fill = c("blue", "red"),
  alpha = 0.5,
  cex = 0.8,      
  cat.cex = 0.8,
  main = "Male AD vs Female AD (All DEGs)",
  main.cex = 1.0,  
  margin = 0.05    
)
grid.draw(venn_all)

# Male AD Upregulated vs Female AD Upregulated
grid.newpage()  
venn_up <- venn.diagram(
  x = list(Male_Up = male_up, Female_Up = female_up),
  category.names = c("Male Up", "Female Up"),
  filename = NULL,
  output = TRUE,
  fill = c("lightblue", "pink"),
  alpha = 0.5,
  cex = 0.8,
  cat.cex = 0.8,
  main = "Male AD Upregulated vs Female AD Upregulated",
  main.cex = 1.0,
  margin = 0.05
)
grid.draw(venn_up)

# Male AD Downregulated vs Female AD Downregulated
grid.newpage()  
venn_down <- venn.diagram(
  x = list(Male_Down = male_down, Female_Down = female_down),
  category.names = c("Male Down", "Female Down"),
  filename = NULL,
  output = TRUE,
  fill = c("lightgreen", "orange"),
  alpha = 0.5,
  cex = 0.8,
  cat.cex = 0.8,
  main = "Male AD Downregulated vs Female AD Downregulated",
  main.cex = 1.0,
  margin = 0.05
)
